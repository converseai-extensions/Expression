/**
 * @file test/module-advanced_expression-test.js
 * @author graeme.cassels@smartsheet.com
 * @description  
 *
 * Generated by the converse-cli tool for use with the Converse AI
 * Plugins SDK. https://developers.converse.ai/
 */

const request     = require('supertest');
const expect      = require('chai').expect;
const server      = require('./lib/express');

describe('Advanced Expression', function () {

  it('no input', function(done) {
    request(server)
      .post('/')
      .send({
        event: 'MODULE_EXEC',
        payload: {
          moduleId: 'advanced_expression',
          moduleParam: {
            input: undefined,
            vars: undefined
          }
        }
      })
      .set('X_CONVERSE_APP_TOKEN', require('../app-token'))
      .expect(200)
      .end(function(err, res) {
        expect(res.body).to.have.property('status').to.equal(1);
        expect(res.body).to.have.property('error').to.have.property('httpStatus').to.equal(400);
        done();
      });
  })

  it('a + 1 = 2', function(done) {
    request(server)
      .post('/')
      .send({
        event: 'MODULE_EXEC',
        payload: {
          moduleId: 'advanced_expression',
          moduleParam: {
            input: 'a + 1',
            vars: {
              a: 1
            }
          }
        }
      })
      .set('X_CONVERSE_APP_TOKEN', require('../app-token'))
      .expect(200)
      .end(function(err, res) {
        expect(res.body).to.have.property('status').to.equal(0);
        expect(res.body).to.have.property('value').to.have.property('result').to.equal(2);
        done();
      });
  })

  it('a + ", World!" = "Hello, World!"', function(done) {
    request(server)
      .post('/')
      .send({
        event: 'MODULE_EXEC',
        payload: {
          moduleId: 'advanced_expression',
          moduleParam: {
            input: 'a + ", World!"',
            vars: {
              a: 'Hello'
            }
          }
        }
      })
      .set('X_CONVERSE_APP_TOKEN', require('../app-token'))
      .expect(200)
      .end(function(err, res) {
        expect(res.body).to.have.property('status').to.equal(0);
        expect(res.body).to.have.property('value').to.have.property('result').to.equal('Hello, World!');
        done();
      });
  })

  it('_.map()', function(done) {
    request(server)
      .post('/')
      .send({
        event: 'MODULE_EXEC',
        payload: {
          moduleId: 'advanced_expression',
          moduleParam: {
            input: '_.map(a, n => n * 2)',
            vars: {
              a: [1, 2, 3, 4]
            }
          }
        }
      })
      .set('X_CONVERSE_APP_TOKEN', require('../app-token'))
      .expect(200)
      .end(function(err, res) {
        console.log(res.body.value.result);
        
        expect(res.body).to.have.property('status').to.equal(0);
        expect(res.body).to.have.property('value').to.have.property('result').to.be.an('array').to.include.members([2, 4, 6, 8])
        done();
      });
  })

});
